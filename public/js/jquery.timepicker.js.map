{"version":3,"sources":["jquery.timepicker.js"],"names":[],"mappingsfile":"jquery.timepicker.js","sourcesContent":["/*!\r\n * jquery-timepicker v1.11.13 - A jQuery timepicker plugin inspired by Google Calendar. It supports both mouse and keyboard navigation.\r\n * Copyright (c) 2015 Jon Thornton - http://jonthornton.github.com/jquery-timepicker/\r\n * License: MIT\r\n */\r\n\r\n(function(factory) {\r\n  if (\r\n    typeof exports === \"object\" &&\r\n    exports &&\r\n    typeof module === \"object\" &&\r\n    module &&\r\n    module.exports === exports\r\n  ) {\r\n    // Browserify. Attach to jQuery module.\r\n    factory(require(\"jquery\"));\r\n  } else if (typeof define === \"function\" && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([\"jquery\"], factory);\r\n  } else {\r\n    // Browser globals\r\n    factory(jQuery);\r\n  }\r\n})(function($) {\r\n  var _ONE_DAY = 86400;\r\n  var _lang = {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    AM: \"AM\",\r\n    PM: \"PM\",\r\n    decimal: \".\",\r\n    mins: \"mins\",\r\n    hr: \"hr\",\r\n    hrs: \"hrs\"\r\n  };\r\n\r\n  var _DEFAULTS = {\r\n    appendTo: \"body\",\r\n    className: null,\r\n    closeOnWindowScroll: false,\r\n    disableTextInput: false,\r\n    disableTimeRanges: [],\r\n    disableTouchKeyboard: false,\r\n    durationTime: null,\r\n    forceRoundTime: false,\r\n    maxTime: null,\r\n    minTime: null,\r\n    noneOption: false,\r\n    orientation: \"l\",\r\n    roundingFunction: function(seconds, settings) {\r\n      if (seconds === null) {\r\n        return null;\r\n      } else if (typeof settings.step !== \"number\") {\r\n        // TODO: nearest fit irregular steps\r\n        return seconds;\r\n      } else {\r\n        var offset = seconds % (settings.step * 60); // step is in minutes\r\n\r\n        var start = settings.minTime || 0;\r\n\r\n        // adjust offset by start mod step so that the offset is aligned not to 00:00 but to the start\r\n        offset -= start % (settings.step * 60);\r\n\r\n        if (offset >= settings.step * 30) {\r\n          // if offset is larger than a half step, round up\r\n          seconds += settings.step * 60 - offset;\r\n        } else {\r\n          // round down\r\n          seconds -= offset;\r\n        }\r\n\r\n        return _moduloSeconds(seconds, settings);\r\n      }\r\n    },\r\n    scrollDefault: null,\r\n    selectOnBlur: false,\r\n    show2400: false,\r\n    showDuration: false,\r\n    showOn: [\"click\", \"focus\"],\r\n    showOnFocus: true,\r\n    step: 30,\r\n    stopScrollPropagation: false,\r\n    timeFormat: \"g:ia\",\r\n    typeaheadHighlight: true,\r\n    useSelect: false,\r\n    wrapHours: true\r\n  };\r\n\r\n  var methods = {\r\n    init: function(options) {\r\n      return this.each(function() {\r\n        var self = $(this);\r\n\r\n        // pick up settings from data attributes\r\n        var attributeOptions = [];\r\n        for (var key in _DEFAULTS) {\r\n          if (self.data(key)) {\r\n            attributeOptions[key] = self.data(key);\r\n          }\r\n        }\r\n\r\n        var settings = $.extend({}, _DEFAULTS, options, attributeOptions);\r\n\r\n        if (settings.lang) {\r\n          _lang = $.extend(_lang, settings.lang);\r\n        }\r\n\r\n        settings = _parseSettings(settings);\r\n        self.data(\"timepicker-settings\", settings);\r\n        self.addClass(\"ui-timepicker-input\");\r\n\r\n        if (settings.useSelect) {\r\n          _render(self);\r\n        } else {\r\n          self.prop(\"autocomplete\", \"off\");\r\n          if (settings.showOn) {\r\n            for (var i in settings.showOn) {\r\n              self.on(settings.showOn[i] + \".timepicker\", methods.show);\r\n            }\r\n          }\r\n          self.on(\"change.timepicker\", _formatValue);\r\n          self.on(\"keydown.timepicker\", _keydownhandler);\r\n          self.on(\"keyup.timepicker\", _keyuphandler);\r\n          if (settings.disableTextInput) {\r\n            self.on(\"keydown.timepicker\", _disableTextInputHandler);\r\n          }\r\n          self.on(\"cut.timepicker\", _keyuphandler);\r\n          self.on(\"paste.timepicker\", _keyuphandler);\r\n\r\n          _formatValue.call(self.get(0), null, \"initial\");\r\n        }\r\n      });\r\n    },\r\n\r\n    show: function(e) {\r\n      var self = $(this);\r\n      var settings = self.data(\"timepicker-settings\");\r\n\r\n      if (e) {\r\n        e.preventDefault();\r\n      }\r\n\r\n      if (settings.useSelect) {\r\n        self.data(\"timepicker-list\").focus();\r\n        return;\r\n      }\r\n\r\n      if (_hideKeyboard(self)) {\r\n        // block the keyboard on mobile devices\r\n        self.blur();\r\n      }\r\n\r\n      var list = self.data(\"timepicker-list\");\r\n\r\n      // check if input is readonly\r\n      if (self.prop(\"readonly\")) {\r\n        return;\r\n      }\r\n\r\n      // check if list needs to be rendered\r\n      if (\r\n        !list ||\r\n        list.length === 0 ||\r\n        typeof settings.durationTime === \"function\"\r\n      ) {\r\n        _render(self);\r\n        list = self.data(\"timepicker-list\");\r\n      }\r\n\r\n      if (_isVisible(list)) {\r\n        return;\r\n      }\r\n\r\n      self.data(\"ui-timepicker-value\", self.val());\r\n      _setSelected(self, list);\r\n\r\n      // make sure other pickers are hidden\r\n      methods.hide();\r\n\r\n      // position the dropdown relative to the input\r\n      list.show();\r\n      var listOffset = {};\r\n\r\n      if (settings.orientation.match(/r/)) {\r\n        // right-align the dropdown\r\n        listOffset.left =\r\n          self.offset().left +\r\n          self.outerWidth() -\r\n          list.outerWidth() +\r\n          parseInt(list.css(\"marginLeft\").replace(\"px\", \"\"), 10);\r\n      } else {\r\n        // left-align the dropdown\r\n        listOffset.left =\r\n          self.offset().left +\r\n          parseInt(list.css(\"marginLeft\").replace(\"px\", \"\"), 10);\r\n      }\r\n\r\n      var verticalOrientation;\r\n      if (settings.orientation.match(/t/)) {\r\n        verticalOrientation = \"t\";\r\n      } else if (settings.orientation.match(/b/)) {\r\n        verticalOrientation = \"b\";\r\n      } else if (\r\n        self.offset().top + self.outerHeight(true) + list.outerHeight() >\r\n        $(window).height() + $(window).scrollTop()\r\n      ) {\r\n        verticalOrientation = \"t\";\r\n      } else {\r\n        verticalOrientation = \"b\";\r\n      }\r\n\r\n      if (verticalOrientation == \"t\") {\r\n        // position the dropdown on top\r\n        list.addClass(\"ui-timepicker-positioned-top\");\r\n        listOffset.top =\r\n          self.offset().top -\r\n          list.outerHeight() +\r\n          parseInt(list.css(\"marginTop\").replace(\"px\", \"\"), 10);\r\n      } else {\r\n        // put it under the input\r\n        list.removeClass(\"ui-timepicker-positioned-top\");\r\n        listOffset.top =\r\n          self.offset().top +\r\n          self.outerHeight() +\r\n          parseInt(list.css(\"marginTop\").replace(\"px\", \"\"), 10);\r\n      }\r\n\r\n      list.offset(listOffset);\r\n\r\n      // position scrolling\r\n      var selected = list.find(\".ui-timepicker-selected\");\r\n\r\n      if (!selected.length) {\r\n        var timeInt = _time2int(_getTimeValue(self));\r\n        if (timeInt !== null) {\r\n          selected = _findRow(self, list, timeInt);\r\n        } else if (settings.scrollDefault) {\r\n          selected = _findRow(self, list, settings.scrollDefault());\r\n        }\r\n      }\r\n\r\n      // if not found or disabled, intelligently find first selectable element\r\n      if (!selected.length || selected.hasClass(\"ui-timepicker-disabled\")) {\r\n        selected = list.find(\"li:not(.ui-timepicker-disabled):first\");\r\n      }\r\n\r\n      if (selected && selected.length) {\r\n        var topOffset =\r\n          list.scrollTop() + selected.position().top - selected.outerHeight();\r\n        list.scrollTop(topOffset);\r\n      } else {\r\n        list.scrollTop(0);\r\n      }\r\n\r\n      // prevent scroll propagation\r\n      if (settings.stopScrollPropagation) {\r\n        $(\r\n          document\r\n        ).on(\"wheel.ui-timepicker\", \".ui-timepicker-wrapper\", function(e) {\r\n          e.preventDefault();\r\n          var currentScroll = $(this).scrollTop();\r\n          $(this).scrollTop(currentScroll + e.originalEvent.deltaY);\r\n        });\r\n      }\r\n\r\n      // attach close handlers\r\n      $(document).on(\r\n        \"touchstart.ui-timepicker mousedown.ui-timepicker\",\r\n        _closeHandler\r\n      );\r\n      $(window).on(\"resize.ui-timepicker\", _closeHandler);\r\n      if (settings.closeOnWindowScroll) {\r\n        $(document).on(\"scroll.ui-timepicker\", _closeHandler);\r\n      }\r\n\r\n      self.trigger(\"showTimepicker\");\r\n\r\n      return this;\r\n    },\r\n\r\n    hide: function(e) {\r\n      var self = $(this);\r\n      var settings = self.data(\"timepicker-settings\");\r\n\r\n      if (settings && settings.useSelect) {\r\n        self.blur();\r\n      }\r\n\r\n      $(\".ui-timepicker-wrapper\").each(function() {\r\n        var list = $(this);\r\n        if (!_isVisible(list)) {\r\n          return;\r\n        }\r\n\r\n        var self = list.data(\"timepicker-input\");\r\n        var settings = self.data(\"timepicker-settings\");\r\n\r\n        if (settings && settings.selectOnBlur) {\r\n          _selectValue(self);\r\n        }\r\n\r\n        list.hide();\r\n        self.trigger(\"hideTimepicker\");\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    option: function(key, value) {\r\n      if (typeof key == \"string\" && typeof value == \"undefined\") {\r\n        return $(this).data(\"timepicker-settings\")[key];\r\n      }\r\n\r\n      return this.each(function() {\r\n        var self = $(this);\r\n        var settings = self.data(\"timepicker-settings\");\r\n        var list = self.data(\"timepicker-list\");\r\n\r\n        if (typeof key == \"object\") {\r\n          settings = $.extend(settings, key);\r\n        } else if (typeof key == \"string\") {\r\n          settings[key] = value;\r\n        }\r\n\r\n        settings = _parseSettings(settings);\r\n\r\n        self.data(\"timepicker-settings\", settings);\r\n\r\n        _formatValue.call(self.get(0), { type: \"change\" }, \"initial\");\r\n\r\n        if (list) {\r\n          list.remove();\r\n          self.data(\"timepicker-list\", false);\r\n        }\r\n\r\n        if (settings.useSelect) {\r\n          _render(self);\r\n        }\r\n      });\r\n    },\r\n\r\n    getSecondsFromMidnight: function() {\r\n      return _time2int(_getTimeValue(this));\r\n    },\r\n\r\n    getTime: function(relative_date) {\r\n      var self = this;\r\n\r\n      var time_string = _getTimeValue(self);\r\n      if (!time_string) {\r\n        return null;\r\n      }\r\n\r\n      var offset = _time2int(time_string);\r\n      if (offset === null) {\r\n        return null;\r\n      }\r\n\r\n      if (!relative_date) {\r\n        relative_date = new Date();\r\n      }\r\n\r\n      // construct a Date from relative date, and offset's time\r\n      var time = new Date(relative_date);\r\n      time.setHours(offset / 3600);\r\n      time.setMinutes((offset % 3600) / 60);\r\n      time.setSeconds(offset % 60);\r\n      time.setMilliseconds(0);\r\n\r\n      return time;\r\n    },\r\n\r\n    isVisible: function() {\r\n      var self = this;\r\n      var list = self.data(\"timepicker-list\");\r\n      return !!(list && _isVisible(list));\r\n    },\r\n\r\n    setTime: function(value) {\r\n      var self = this;\r\n      var settings = self.data(\"timepicker-settings\");\r\n\r\n      if (settings.forceRoundTime) {\r\n        var prettyTime = _roundAndFormatTime(_time2int(value), settings);\r\n      } else {\r\n        var prettyTime = _int2time(_time2int(value), settings);\r\n      }\r\n\r\n      if (value && prettyTime === null && settings.noneOption) {\r\n        prettyTime = value;\r\n      }\r\n\r\n      _setTimeValue(self, prettyTime, \"initial\");\r\n      _formatValue.call(self.get(0), { type: \"change\" }, \"initial\");\r\n\r\n      if (self.data(\"timepicker-list\")) {\r\n        _setSelected(self, self.data(\"timepicker-list\"));\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    remove: function() {\r\n      var self = this;\r\n\r\n      // check if this element is a timepicker\r\n      if (!self.hasClass(\"ui-timepicker-input\")) {\r\n        return;\r\n      }\r\n\r\n      var settings = self.data(\"timepicker-settings\");\r\n      self.removeAttr(\"autocomplete\", \"off\");\r\n      self.removeClass(\"ui-timepicker-input\");\r\n      self.removeData(\"timepicker-settings\");\r\n      self.off(\".timepicker\");\r\n\r\n      // timepicker-list won't be present unless the user has interacted with this timepicker\r\n      if (self.data(\"timepicker-list\")) {\r\n        self.data(\"timepicker-list\").remove();\r\n      }\r\n\r\n      if (settings.useSelect) {\r\n        self.show();\r\n      }\r\n\r\n      self.removeData(\"timepicker-list\");\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // private methods\r\n\r\n  function _isVisible(elem) {\r\n    var el = elem[0];\r\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\r\n  }\r\n\r\n  function _parseSettings(settings) {\r\n    if (settings.minTime) {\r\n      settings.minTime = _time2int(settings.minTime);\r\n    }\r\n\r\n    if (settings.maxTime) {\r\n      settings.maxTime = _time2int(settings.maxTime);\r\n    }\r\n\r\n    if (settings.durationTime && typeof settings.durationTime !== \"function\") {\r\n      settings.durationTime = _time2int(settings.durationTime);\r\n    }\r\n\r\n    if (settings.scrollDefault == \"now\") {\r\n      settings.scrollDefault = function() {\r\n        return settings.roundingFunction(_time2int(new Date()), settings);\r\n      };\r\n    } else if (\r\n      settings.scrollDefault &&\r\n      typeof settings.scrollDefault != \"function\"\r\n    ) {\r\n      var val = settings.scrollDefault;\r\n      settings.scrollDefault = function() {\r\n        return settings.roundingFunction(_time2int(val), settings);\r\n      };\r\n    } else if (settings.minTime) {\r\n      settings.scrollDefault = function() {\r\n        return settings.roundingFunction(settings.minTime, settings);\r\n      };\r\n    }\r\n\r\n    if (\r\n      $.type(settings.timeFormat) === \"string\" &&\r\n      settings.timeFormat.match(/[gh]/)\r\n    ) {\r\n      settings._twelveHourTime = true;\r\n    }\r\n\r\n    if (\r\n      settings.showOnFocus === false &&\r\n      settings.showOn.indexOf(\"focus\") != -1\r\n    ) {\r\n      settings.showOn.splice(settings.showOn.indexOf(\"focus\"), 1);\r\n    }\r\n\r\n    if (settings.disableTimeRanges.length > 0) {\r\n      // convert string times to integers\r\n      for (var i in settings.disableTimeRanges) {\r\n        settings.disableTimeRanges[i] = [\r\n          _time2int(settings.disableTimeRanges[i][0]),\r\n          _time2int(settings.disableTimeRanges[i][1])\r\n        ];\r\n      }\r\n\r\n      // sort by starting time\r\n      settings.disableTimeRanges = settings.disableTimeRanges.sort(function(\r\n        a,\r\n        b\r\n      ) {\r\n        return a[0] - b[0];\r\n      });\r\n\r\n      // merge any overlapping ranges\r\n      for (var i = settings.disableTimeRanges.length - 1; i > 0; i--) {\r\n        if (\r\n          settings.disableTimeRanges[i][0] <=\r\n          settings.disableTimeRanges[i - 1][1]\r\n        ) {\r\n          settings.disableTimeRanges[i - 1] = [\r\n            Math.min(\r\n              settings.disableTimeRanges[i][0],\r\n              settings.disableTimeRanges[i - 1][0]\r\n            ),\r\n            Math.max(\r\n              settings.disableTimeRanges[i][1],\r\n              settings.disableTimeRanges[i - 1][1]\r\n            )\r\n          ];\r\n          settings.disableTimeRanges.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    return settings;\r\n  }\r\n\r\n  function _render(self) {\r\n    var settings = self.data(\"timepicker-settings\");\r\n    var list = self.data(\"timepicker-list\");\r\n\r\n    if (list && list.length) {\r\n      list.remove();\r\n      self.data(\"timepicker-list\", false);\r\n    }\r\n\r\n    if (settings.useSelect) {\r\n      list = $(\"<select />\", { class: \"ui-timepicker-select\" });\r\n      var wrapped_list = list;\r\n    } else {\r\n      list = $(\"<ul />\", { class: \"ui-timepicker-list\" });\r\n\r\n      var wrapped_list = $(\"<div />\", {\r\n        class: \"ui-timepicker-wrapper\",\r\n        tabindex: -1\r\n      });\r\n      wrapped_list.css({ display: \"none\", position: \"absolute\" }).append(list);\r\n    }\r\n\r\n    if (settings.noneOption) {\r\n      if (settings.noneOption === true) {\r\n        settings.noneOption = settings.useSelect ? \"Time...\" : \"None\";\r\n      }\r\n\r\n      if ($.isArray(settings.noneOption)) {\r\n        for (var i in settings.noneOption) {\r\n          if (parseInt(i, 10) == i) {\r\n            var noneElement = _generateNoneElement(\r\n              settings.noneOption[i],\r\n              settings.useSelect\r\n            );\r\n            list.append(noneElement);\r\n          }\r\n        }\r\n      } else {\r\n        var noneElement = _generateNoneElement(\r\n          settings.noneOption,\r\n          settings.useSelect\r\n        );\r\n        list.append(noneElement);\r\n      }\r\n    }\r\n\r\n    if (settings.className) {\r\n      wrapped_list.addClass(settings.className);\r\n    }\r\n\r\n    if (\r\n      (settings.minTime !== null || settings.durationTime !== null) &&\r\n      settings.showDuration\r\n    ) {\r\n      var stepval =\r\n        typeof settings.step == \"function\" ? \"function\" : settings.step;\r\n      wrapped_list.addClass(\"ui-timepicker-with-duration\");\r\n      wrapped_list.addClass(\"ui-timepicker-step-\" + settings.step);\r\n    }\r\n\r\n    var durStart = settings.minTime;\r\n    if (typeof settings.durationTime === \"function\") {\r\n      durStart = _time2int(settings.durationTime());\r\n    } else if (settings.durationTime !== null) {\r\n      durStart = settings.durationTime;\r\n    }\r\n    var start = settings.minTime !== null ? settings.minTime : 0;\r\n    var end =\r\n      settings.maxTime !== null ? settings.maxTime : start + _ONE_DAY - 1;\r\n\r\n    if (end < start) {\r\n      // make sure the end time is greater than start time, otherwise there will be no list to show\r\n      end += _ONE_DAY;\r\n    }\r\n\r\n    if (\r\n      end === _ONE_DAY - 1 &&\r\n      $.type(settings.timeFormat) === \"string\" &&\r\n      settings.show2400\r\n    ) {\r\n      // show a 24:00 option when using military time\r\n      end = _ONE_DAY;\r\n    }\r\n\r\n    var dr = settings.disableTimeRanges;\r\n    var drCur = 0;\r\n    var drLen = dr.length;\r\n\r\n    var stepFunc = settings.step;\r\n    if (typeof stepFunc != \"function\") {\r\n      stepFunc = function() {\r\n        return settings.step;\r\n      };\r\n    }\r\n\r\n    for (var i = start, j = 0; i <= end; j++, i += stepFunc(j) * 60) {\r\n      var timeInt = i;\r\n      var timeString = _int2time(timeInt, settings);\r\n\r\n      if (settings.useSelect) {\r\n        var row = $(\"<option />\", { value: timeString });\r\n        row.text(timeString);\r\n      } else {\r\n        var row = $(\"<li />\");\r\n        row.addClass(\r\n          timeInt % _ONE_DAY < _ONE_DAY / 2\r\n            ? \"ui-timepicker-am\"\r\n            : \"ui-timepicker-pm\"\r\n        );\r\n        row.data(\"time\", _moduloSeconds(timeInt, settings));\r\n        row.text(timeString);\r\n      }\r\n\r\n      if (\r\n        (settings.minTime !== null || settings.durationTime !== null) &&\r\n        settings.showDuration\r\n      ) {\r\n        var durationString = _int2duration(i - durStart, settings.step);\r\n        if (settings.useSelect) {\r\n          row.text(row.text() + \" (\" + durationString + \")\");\r\n        } else {\r\n          var duration = $(\"<span />\", { class: \"ui-timepicker-duration\" });\r\n          duration.text(\" (\" + durationString + \")\");\r\n          row.append(duration);\r\n        }\r\n      }\r\n\r\n      if (drCur < drLen) {\r\n        if (timeInt >= dr[drCur][1]) {\r\n          drCur += 1;\r\n        }\r\n\r\n        if (dr[drCur] && timeInt >= dr[drCur][0] && timeInt < dr[drCur][1]) {\r\n          if (settings.useSelect) {\r\n            row.prop(\"disabled\", true);\r\n          } else {\r\n            row.addClass(\"ui-timepicker-disabled\");\r\n          }\r\n        }\r\n      }\r\n\r\n      list.append(row);\r\n    }\r\n\r\n    wrapped_list.data(\"timepicker-input\", self);\r\n    self.data(\"timepicker-list\", wrapped_list);\r\n\r\n    if (settings.useSelect) {\r\n      if (self.val()) {\r\n        list.val(_roundAndFormatTime(_time2int(self.val()), settings));\r\n      }\r\n\r\n      list.on(\"focus\", function() {\r\n        $(this)\r\n          .data(\"timepicker-input\")\r\n          .trigger(\"showTimepicker\");\r\n      });\r\n      list.on(\"blur\", function() {\r\n        $(this)\r\n          .data(\"timepicker-input\")\r\n          .trigger(\"hideTimepicker\");\r\n      });\r\n      list.on(\"change\", function() {\r\n        _setTimeValue(self, $(this).val(), \"select\");\r\n      });\r\n\r\n      _setTimeValue(self, list.val(), \"initial\");\r\n      self.hide().after(list);\r\n    } else {\r\n      var appendTo = settings.appendTo;\r\n      if (typeof appendTo === \"string\") {\r\n        appendTo = $(appendTo);\r\n      } else if (typeof appendTo === \"function\") {\r\n        appendTo = appendTo(self);\r\n      }\r\n      appendTo.append(wrapped_list);\r\n      _setSelected(self, list);\r\n\r\n      list.on(\"mousedown click\", \"li\", function(e) {\r\n        // hack: temporarily disable the focus handler\r\n        // to deal with the fact that IE fires 'focus'\r\n        // events asynchronously\r\n        self.off(\"focus.timepicker\");\r\n        self.on(\"focus.timepicker-ie-hack\", function() {\r\n          self.off(\"focus.timepicker-ie-hack\");\r\n          self.on(\"focus.timepicker\", methods.show);\r\n        });\r\n\r\n        if (!_hideKeyboard(self)) {\r\n          self[0].focus();\r\n        }\r\n\r\n        // make sure only the clicked row is selected\r\n        list.find(\"li\").removeClass(\"ui-timepicker-selected\");\r\n        $(this).addClass(\"ui-timepicker-selected\");\r\n\r\n        if (_selectValue(self)) {\r\n          self.trigger(\"hideTimepicker\");\r\n\r\n          list.on(\"mouseup.timepicker click.timepicker\", \"li\", function(e) {\r\n            list.off(\"mouseup.timepicker click.timepicker\");\r\n            wrapped_list.hide();\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function _generateNoneElement(optionValue, useSelect) {\r\n    var label, className, value;\r\n\r\n    if (typeof optionValue == \"object\") {\r\n      label = optionValue.label;\r\n      className = optionValue.className;\r\n      value = optionValue.value;\r\n    } else if (typeof optionValue == \"string\") {\r\n      label = optionValue;\r\n      value = '';\r\n    } else {\r\n      $.error(\"Invalid noneOption value\");\r\n    }\r\n\r\n    if (useSelect) {\r\n      return $(\"<option />\", {\r\n        value: value,\r\n        class: className,\r\n        text: label\r\n      });\r\n    } else {\r\n      return $(\"<li />\", {\r\n        class: className,\r\n        text: label\r\n      }).data(\"time\", String(value));\r\n    }\r\n  }\r\n\r\n  function _roundAndFormatTime(seconds, settings) {\r\n    seconds = settings.roundingFunction(seconds, settings);\r\n    if (seconds !== null) {\r\n      return _int2time(seconds, settings);\r\n    }\r\n  }\r\n\r\n  // event handler to decide whether to close timepicker\r\n  function _closeHandler(e) {\r\n    if (e.target == window) {\r\n      // mobile Chrome fires focus events against window for some reason\r\n      return;\r\n    }\r\n\r\n    var target = $(e.target);\r\n\r\n    if (\r\n      target.closest(\".ui-timepicker-input\").length ||\r\n      target.closest(\".ui-timepicker-wrapper\").length\r\n    ) {\r\n      // active timepicker was focused. ignore\r\n      return;\r\n    }\r\n\r\n    methods.hide();\r\n    $(document).unbind(\".ui-timepicker\");\r\n    $(window).unbind(\".ui-timepicker\");\r\n  }\r\n\r\n  function _hideKeyboard(self) {\r\n    var settings = self.data(\"timepicker-settings\");\r\n    return (\r\n      (window.navigator.msMaxTouchPoints || \"ontouchstart\" in document) &&\r\n      settings.disableTouchKeyboard\r\n    );\r\n  }\r\n\r\n  function _findRow(self, list, value) {\r\n    if (!value && value !== 0) {\r\n      return false;\r\n    }\r\n\r\n    var settings = self.data(\"timepicker-settings\");\r\n    var out = false;\r\n    var value = settings.roundingFunction(value, settings);\r\n\r\n    // loop through the menu items\r\n    list.find(\"li\").each(function(i, obj) {\r\n      var jObj = $(obj);\r\n      if (typeof jObj.data(\"time\") != \"number\") {\r\n        return;\r\n      }\r\n\r\n      if (jObj.data(\"time\") == value) {\r\n        out = jObj;\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return out;\r\n  }\r\n\r\n  function _setSelected(self, list) {\r\n    list.find(\"li\").removeClass(\"ui-timepicker-selected\");\r\n\r\n    var settings = self.data(\"timepicker-settings\");\r\n    var timeValue = _time2int(_getTimeValue(self), settings);\r\n    if (timeValue === null) {\r\n      return;\r\n    }\r\n\r\n    var selected = _findRow(self, list, timeValue);\r\n    if (selected) {\r\n      var topDelta = selected.offset().top - list.offset().top;\r\n\r\n      if (\r\n        topDelta + selected.outerHeight() > list.outerHeight() ||\r\n        topDelta < 0\r\n      ) {\r\n        list.scrollTop(\r\n          list.scrollTop() + selected.position().top - selected.outerHeight()\r\n        );\r\n      }\r\n\r\n      if (settings.forceRoundTime || selected.data(\"time\") === timeValue) {\r\n        selected.addClass(\"ui-timepicker-selected\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function _formatValue(e, origin) {\r\n    if (origin == \"timepicker\") {\r\n      return;\r\n    }\r\n\r\n    var self = $(this);\r\n\r\n    if (this.value === \"\") {\r\n      _setTimeValue(self, null, origin);\r\n      return;\r\n    }\r\n\r\n    if (self.is(\":focus\") && (!e || e.type != \"change\")) {\r\n      return;\r\n    }\r\n\r\n    var settings = self.data(\"timepicker-settings\");\r\n    var seconds = _time2int(this.value, settings);\r\n\r\n    if (seconds === null) {\r\n      self.trigger(\"timeFormatError\");\r\n      return;\r\n    }\r\n\r\n    var rangeError = false;\r\n    // check that the time in within bounds\r\n    if (\r\n      settings.minTime !== null &&\r\n      settings.maxTime !== null &&\r\n      (seconds < settings.minTime || seconds > settings.maxTime)\r\n    ) {\r\n      rangeError = true;\r\n    }\r\n\r\n    // check that time isn't within disabled time ranges\r\n    $.each(settings.disableTimeRanges, function() {\r\n      if (seconds >= this[0] && seconds < this[1]) {\r\n        rangeError = true;\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if (settings.forceRoundTime) {\r\n      var roundSeconds = settings.roundingFunction(seconds, settings);\r\n      if (roundSeconds != seconds) {\r\n        seconds = roundSeconds;\r\n        origin = null;\r\n      }\r\n    }\r\n\r\n    var prettyTime = _int2time(seconds, settings);\r\n\r\n    if (rangeError) {\r\n      if (\r\n        _setTimeValue(self, prettyTime, \"error\") ||\r\n        (e && e.type == \"change\")\r\n      ) {\r\n        self.trigger(\"timeRangeError\");\r\n      }\r\n    } else {\r\n      _setTimeValue(self, prettyTime, origin);\r\n    }\r\n  }\r\n\r\n  function _getTimeValue(self) {\r\n    if (self.is(\"input\")) {\r\n      return self.val();\r\n    } else {\r\n      // use the element's data attributes to store values\r\n      return self.data(\"ui-timepicker-value\");\r\n    }\r\n  }\r\n\r\n  function _setTimeValue(self, value, source) {\r\n    if (self.is(\"input\")) {\r\n      self.val(value);\r\n\r\n      var settings = self.data(\"timepicker-settings\");\r\n      if (settings.useSelect && source != \"select\") {\r\n        self\r\n          .data(\"timepicker-list\")\r\n          .val(_roundAndFormatTime(_time2int(value), settings));\r\n      }\r\n    }\r\n\r\n    if (self.data(\"ui-timepicker-value\") != value) {\r\n      self.data(\"ui-timepicker-value\", value);\r\n      if (source == \"select\") {\r\n        self\r\n          .trigger(\"selectTime\")\r\n          .trigger(\"changeTime\")\r\n          .trigger(\"change\", \"timepicker\");\r\n      } else if ([\"error\", \"initial\"].indexOf(source) == -1) {\r\n        self.trigger(\"changeTime\");\r\n      }\r\n\r\n      return true;\r\n    } else {\r\n      if ([\"error\", \"initial\"].indexOf(source) == -1) {\r\n        self.trigger(\"selectTime\");\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /*\r\n\t*  Filter freeform input\r\n\t*/\r\n  function _disableTextInputHandler(e) {\r\n    switch (e.keyCode) {\r\n      case 13: // return\r\n      case 9: //tab\r\n        return;\r\n\r\n      default:\r\n        e.preventDefault();\r\n    }\r\n  }\r\n\r\n  /*\r\n\t*  Keyboard navigation via arrow keys\r\n\t*/\r\n  function _keydownhandler(e) {\r\n    var self = $(this);\r\n    var list = self.data(\"timepicker-list\");\r\n\r\n    if (!list || !_isVisible(list)) {\r\n      if (e.keyCode == 40) {\r\n        // show the list!\r\n        methods.show.call(self.get(0));\r\n        list = self.data(\"timepicker-list\");\r\n        if (!_hideKeyboard(self)) {\r\n          self.focus();\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    switch (e.keyCode) {\r\n      case 13: // return\r\n        if (_selectValue(self)) {\r\n          _formatValue.call(self.get(0), { type: \"change\" });\r\n          methods.hide.apply(this);\r\n        }\r\n\r\n        e.preventDefault();\r\n        return false;\r\n\r\n      case 38: // up\r\n        var selected = list.find(\".ui-timepicker-selected\");\r\n\r\n        if (!selected.length) {\r\n          list.find(\"li\").each(function(i, obj) {\r\n            if ($(obj).position().top > 0) {\r\n              selected = $(obj);\r\n              return false;\r\n            }\r\n          });\r\n          selected.addClass(\"ui-timepicker-selected\");\r\n        } else if (!selected.is(\":first-child\")) {\r\n          selected.removeClass(\"ui-timepicker-selected\");\r\n          selected.prev().addClass(\"ui-timepicker-selected\");\r\n\r\n          if (selected.prev().position().top < selected.outerHeight()) {\r\n            list.scrollTop(list.scrollTop() - selected.outerHeight());\r\n          }\r\n        }\r\n\r\n        return false;\r\n\r\n      case 40: // down\r\n        selected = list.find(\".ui-timepicker-selected\");\r\n\r\n        if (selected.length === 0) {\r\n          list.find(\"li\").each(function(i, obj) {\r\n            if ($(obj).position().top > 0) {\r\n              selected = $(obj);\r\n              return false;\r\n            }\r\n          });\r\n\r\n          selected.addClass(\"ui-timepicker-selected\");\r\n        } else if (!selected.is(\":last-child\")) {\r\n          selected.removeClass(\"ui-timepicker-selected\");\r\n          selected.next().addClass(\"ui-timepicker-selected\");\r\n\r\n          if (\r\n            selected.next().position().top + 2 * selected.outerHeight() >\r\n            list.outerHeight()\r\n          ) {\r\n            list.scrollTop(list.scrollTop() + selected.outerHeight());\r\n          }\r\n        }\r\n\r\n        return false;\r\n\r\n      case 27: // escape\r\n        list.find(\"li\").removeClass(\"ui-timepicker-selected\");\r\n        methods.hide();\r\n        break;\r\n\r\n      case 9: //tab\r\n        methods.hide();\r\n        break;\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  /*\r\n\t*\tTime typeahead\r\n\t*/\r\n  function _keyuphandler(e) {\r\n    var self = $(this);\r\n    var list = self.data(\"timepicker-list\");\r\n    var settings = self.data(\"timepicker-settings\");\r\n\r\n    if (!list || !_isVisible(list) || settings.disableTextInput) {\r\n      return true;\r\n    }\r\n\r\n    if (e.type === \"paste\" || e.type === \"cut\") {\r\n      setTimeout(function() {\r\n        if (settings.typeaheadHighlight) {\r\n          _setSelected(self, list);\r\n        } else {\r\n          list.hide();\r\n        }\r\n      }, 0);\r\n      return;\r\n    }\r\n\r\n    switch (e.keyCode) {\r\n      case 96: // numpad numerals\r\n      case 97:\r\n      case 98:\r\n      case 99:\r\n      case 100:\r\n      case 101:\r\n      case 102:\r\n      case 103:\r\n      case 104:\r\n      case 105:\r\n      case 48: // numerals\r\n      case 49:\r\n      case 50:\r\n      case 51:\r\n      case 52:\r\n      case 53:\r\n      case 54:\r\n      case 55:\r\n      case 56:\r\n      case 57:\r\n      case 65: // a\r\n      case 77: // m\r\n      case 80: // p\r\n      case 186: // colon\r\n      case 8: // backspace\r\n      case 46: // delete\r\n        if (settings.typeaheadHighlight) {\r\n          _setSelected(self, list);\r\n        } else {\r\n          list.hide();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  function _selectValue(self) {\r\n    var settings = self.data(\"timepicker-settings\");\r\n    var list = self.data(\"timepicker-list\");\r\n    var timeValue = null;\r\n\r\n    var cursor = list.find(\".ui-timepicker-selected\");\r\n\r\n    if (cursor.hasClass(\"ui-timepicker-disabled\")) {\r\n      return false;\r\n    }\r\n\r\n    if (cursor.length) {\r\n      // selected value found\r\n      timeValue = cursor.data(\"time\");\r\n    }\r\n\r\n    if (timeValue !== null) {\r\n      if (typeof timeValue != \"string\") {\r\n        timeValue = _int2time(timeValue, settings);\r\n      }\r\n\r\n      _setTimeValue(self, timeValue, \"select\");\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function _int2duration(seconds, step) {\r\n    seconds = Math.abs(seconds);\r\n    var minutes = Math.round(seconds / 60),\r\n      duration = [],\r\n      hours,\r\n      mins;\r\n\r\n    if (minutes < 60) {\r\n      // Only show (x mins) under 1 hour\r\n      duration = [minutes, _lang.mins];\r\n    } else {\r\n      hours = Math.floor(minutes / 60);\r\n      mins = minutes % 60;\r\n\r\n      // Show decimal notation (eg: 1.5 hrs) for 30 minute steps\r\n      if (step == 30 && mins == 30) {\r\n        hours += _lang.decimal + 5;\r\n      }\r\n\r\n      duration.push(hours);\r\n      duration.push(hours == 1 ? _lang.hr : _lang.hrs);\r\n\r\n      // Show remainder minutes notation (eg: 1 hr 15 mins) for non-30 minute steps\r\n      // and only if there are remainder minutes to show\r\n      if (step != 30 && mins) {\r\n        duration.push(mins);\r\n        duration.push(_lang.mins);\r\n      }\r\n    }\r\n\r\n    return duration.join(\" \");\r\n  }\r\n\r\n  function _int2time(timeInt, settings) {\r\n    if (typeof timeInt != \"number\") {\r\n      return null;\r\n    }\r\n\r\n    var seconds = parseInt(timeInt % 60),\r\n      minutes = parseInt((timeInt / 60) % 60),\r\n      hours = parseInt((timeInt / (60 * 60)) % 24);\r\n\r\n    var time = new Date(1970, 0, 2, hours, minutes, seconds, 0);\r\n\r\n    if (isNaN(time.getTime())) {\r\n      return null;\r\n    }\r\n\r\n    if ($.type(settings.timeFormat) === \"function\") {\r\n      return settings.timeFormat(time);\r\n    }\r\n\r\n    var output = \"\";\r\n    var hour, code;\r\n    for (var i = 0; i < settings.timeFormat.length; i++) {\r\n      code = settings.timeFormat.charAt(i);\r\n      switch (code) {\r\n        case \"a\":\r\n          output += time.getHours() > 11 ? _lang.pm : _lang.am;\r\n          break;\r\n\r\n        case \"A\":\r\n          output += time.getHours() > 11 ? _lang.PM : _lang.AM;\r\n          break;\r\n\r\n        case \"g\":\r\n          hour = time.getHours() % 12;\r\n          output += hour === 0 ? \"12\" : hour;\r\n          break;\r\n\r\n        case \"G\":\r\n          hour = time.getHours();\r\n          if (timeInt === _ONE_DAY) hour = settings.show2400 ? 24 : 0;\r\n          output += hour;\r\n          break;\r\n\r\n        case \"h\":\r\n          hour = time.getHours() % 12;\r\n\r\n          if (hour !== 0 && hour < 10) {\r\n            hour = \"0\" + hour;\r\n          }\r\n\r\n          output += hour === 0 ? \"12\" : hour;\r\n          break;\r\n\r\n        case \"H\":\r\n          hour = time.getHours();\r\n          if (timeInt === _ONE_DAY) hour = settings.show2400 ? 24 : 0;\r\n          output += hour > 9 ? hour : \"0\" + hour;\r\n          break;\r\n\r\n        case \"i\":\r\n          var minutes = time.getMinutes();\r\n          output += minutes > 9 ? minutes : \"0\" + minutes;\r\n          break;\r\n\r\n        case \"s\":\r\n          seconds = time.getSeconds();\r\n          output += seconds > 9 ? seconds : \"0\" + seconds;\r\n          break;\r\n\r\n        case \"\\\\\":\r\n          // escape character; add the next character and skip ahead\r\n          i++;\r\n          output += settings.timeFormat.charAt(i);\r\n          break;\r\n\r\n        default:\r\n          output += code;\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  function _time2int(timeString, settings) {\r\n    if (timeString === \"\" || timeString === null) return null;\r\n    if (typeof timeString == \"object\") {\r\n      return (\r\n        timeString.getHours() * 3600 +\r\n        timeString.getMinutes() * 60 +\r\n        timeString.getSeconds()\r\n      );\r\n    }\r\n    if (typeof timeString != \"string\") {\r\n      return timeString;\r\n    }\r\n\r\n    timeString = timeString.toLowerCase().replace(/[\\s\\.]/g, \"\");\r\n\r\n    // if the last character is an \"a\" or \"p\", add the \"m\"\r\n    if (timeString.slice(-1) == \"a\" || timeString.slice(-1) == \"p\") {\r\n      timeString += \"m\";\r\n    }\r\n\r\n    var ampmRegex =\r\n      \"(\" +\r\n      _lang.am.replace(\".\", \"\") +\r\n      \"|\" +\r\n      _lang.pm.replace(\".\", \"\") +\r\n      \"|\" +\r\n      _lang.AM.replace(\".\", \"\") +\r\n      \"|\" +\r\n      _lang.PM.replace(\".\", \"\") +\r\n      \")?\";\r\n\r\n    // try to parse time input\r\n    var pattern = new RegExp(\r\n      \"^\" +\r\n        ampmRegex +\r\n        \"([0-9]?[0-9])\\\\W?([0-5][0-9])?\\\\W?([0-5][0-9])?\" +\r\n        ampmRegex +\r\n        \"$\"\r\n    );\r\n\r\n    var time = timeString.match(pattern);\r\n    if (!time) {\r\n      return null;\r\n    }\r\n\r\n    var hour = parseInt(time[2] * 1, 10);\r\n    var ampm = time[1] || time[5];\r\n    var hours = hour;\r\n    var minutes = time[3] * 1 || 0;\r\n    var seconds = time[4] * 1 || 0;\r\n\r\n    if (hour <= 12 && ampm) {\r\n      var isPm = ampm == _lang.pm || ampm == _lang.PM;\r\n\r\n      if (hour == 12) {\r\n        hours = isPm ? 12 : 0;\r\n      } else {\r\n        hours = hour + (isPm ? 12 : 0);\r\n      }\r\n    } else if (settings) {\r\n      var t = hour * 3600 + minutes * 60 + seconds;\r\n      if (t >= _ONE_DAY + (settings.show2400 ? 1 : 0)) {\r\n        if (settings.wrapHours === false) {\r\n          return null;\r\n        }\r\n\r\n        hours = hour % 24;\r\n      }\r\n    }\r\n\r\n    var timeInt = hours * 3600 + minutes * 60 + seconds;\r\n\r\n    // if no am/pm provided, intelligently guess based on the scrollDefault\r\n    if (\r\n      hour < 12 &&\r\n      !ampm &&\r\n      settings &&\r\n      settings._twelveHourTime &&\r\n      settings.scrollDefault\r\n    ) {\r\n      var delta = timeInt - settings.scrollDefault();\r\n      if (delta < 0 && delta >= _ONE_DAY / -2) {\r\n        timeInt = (timeInt + _ONE_DAY / 2) % _ONE_DAY;\r\n      }\r\n    }\r\n\r\n    return timeInt;\r\n  }\r\n\r\n  function _pad2(n) {\r\n    return (\"0\" + n).slice(-2);\r\n  }\r\n\r\n  function _moduloSeconds(seconds, settings) {\r\n    if (seconds == _ONE_DAY && settings.show2400) {\r\n      return seconds;\r\n    }\r\n\r\n    return seconds % _ONE_DAY;\r\n  }\r\n\r\n  // Plugin entry\r\n  $.fn.timepicker = function(method) {\r\n    if (!this.length) return this;\r\n    if (methods[method]) {\r\n      // check if this element is a timepicker\r\n      if (!this.hasClass(\"ui-timepicker-input\")) {\r\n        return this;\r\n      }\r\n      return methods[method].apply(\r\n        this,\r\n        Array.prototype.slice.call(arguments, 1)\r\n      );\r\n    } else if (typeof method === \"object\" || !method) {\r\n      return methods.init.apply(this, arguments);\r\n    } else {\r\n      $.error(\"Method \" + method + \" does not exist on jQuery.timepicker\");\r\n    }\r\n  };\r\n});\r\n"]}